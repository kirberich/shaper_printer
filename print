#!/usr/bin/env python
from dominos import draw_dominos, calculate_columns, generate_domino_png
import argparse

from printer import print_image

OUTPUT_FILE = "output.png"
SPACING = 2.38  # predefined to make 4 labels fit on a 62mm label without any resizing


def parse_args():
    parser = argparse.ArgumentParser(description="Print shaper dominos on 62mm labels.")
    parser.add_argument("length", type=int, help="(mm)")
    parser.add_argument("printer_identifier")
    parser.add_argument("printer_model")
    parser.add_argument("--padding", type=float, default=0)
    parser.add_argument("--dry-run", action="store_true")
    parser.add_argument(
        "--hq",
        action="store_true",
        help="Print in 600DPI - Note this might make printing extremely slow!",
    )
    parser.add_argument("--copies", type=int, default=1)

    args = parser.parse_args()
    return args


if __name__ == "__main__":
    args = parse_args()

    columns = calculate_columns(args.length, args.padding, SPACING)
    if not columns:
        raise RuntimeError(f"Cannot fit any dominos into {args.length}mm")

    # Generate the domino image
    generate_domino_png(
        rows=4,  # max that fits on a 62mm label
        columns=columns,
        filename=OUTPUT_FILE,
        row_spacing=SPACING,
        column_spacing=SPACING,
        padding=args.padding,
        hq=args.hq,
    )

    if not args.dry_run:
        for x in range(args.copies):
            print_image(
                OUTPUT_FILE,
                printer_identifier=args.printer_identifier,
                model=args.printer_model,
                hq=args.hq,
            )
